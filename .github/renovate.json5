{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>jr0dd/home-ops//.github/renovate/autoMerge",
    "github>jr0dd/home-ops//.github/renovate/labels",
    "github>jr0dd/home-ops//.github/renovate/semanticCommits"
  ],
  "platform": "github",
  "username": "wyoa-bot[bot]",
  "repositories": ["jr0dd/home-ops"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "wyoa-bot <98073241+wyoa-bot[bot]@users.noreply.github.com>",
  "timezone": "America/New_York",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  // set up renovate managers
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helm-release\\.yaml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process GitHub release artifacts
    {
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        "https:\/\/github.com\/(?<org>.*=?)\/(?<repo>.*=?)\/releases\/download\/(?<currentValue>.*=?)\/.*"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "{{org}}/{{repo}}"
    },
    // Generic Docker image regexManager
    {
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        "# renovate: docker-image( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n .*: (?<depName>.*?):(?<currentValue>.*=?)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
      "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}"
    },
    // regexManager to read and process CRD's
    {
      "fileMatch": [
        "cluster/crds/.+\\.yaml$",
        "cluster/base/flux/repositories/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom versioning
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "quay.io/minio/minio"
      ],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent"
      ],
      "versioning": "loose"
    },
    // group packages
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "k8s.gcr.io/kube-apiserver",
        "k8s.gcr.io/kube-controller-manager",
        "k8s.gcr.io/kube-scheduler",
        "ghcr.io/talos-systems/kubelet"
      ],
      "groupName": "kubernetes",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "docker",
        "helm"
      ],
      "matchPackageNames": [
        "quay.io/cilium/cilium",
        "quay.io/cilium/operator-generic",
        "cilium"
      ],
      "groupName": "cilium",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "docker",
        "helm"
      ],
      "matchPackageNames": [
        "library/mongo",
        "quay.io/mongodb/mongodb-kubernetes-operator",
        "community-operator"
      ],
      "groupName": "mongodb",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "docker",
        "github-tags"
      ],
      "matchPackagePatterns": [
        "rancher/system-upgrade-controller"
      ],
      "groupName": "system-upgrade-controller-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
