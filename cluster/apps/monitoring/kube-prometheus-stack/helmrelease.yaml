---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 17.2.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  values:
    fullnameOverride: prometheus
    nameOverride: prometheus
    alertmanager:
      enabled: true
      logFormat: json
      logLevel: error
      config:
        global:
          resolve_timeout: 5m
          smtp_from: "${SECRET_ALERTMANAGER_EMAIL}"
          smtp_smarthost: "${SECRET_SMTP}:587"
          smtp_auth_username: "${SECRET_EMAIL}"
          smtp_auth_identity: "${SECRET_EMAIL}"
          smtp_auth_password: "${SECRET_EMAIL_PASSWORD}"
        receivers:
        - name: "null"
        - name: "email"
          email_configs:
          - to: "${SECRET_EMAIL}"
            send_resolved: true
        route:
          receiver: email
          group_wait: 10s
          group_interval: 5m
          repeat_interval: 1h
          group_by: ['alertname', 'job']
          routes:
          - match:
              alertname: Watchdog
            receiver: "null"
          - match:
              severity: critical
            receiver: "email"
            continue: true
        inhibit_rules:
        - source_match:
            severity: critical
          target_match:
            severity: warning
          equal: ['alertname', 'namespace']
        templates:
        - /etc/alertmanager/config/*.tmpl
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
        - "alertmanager.${SECRET_DOMAIN}"
        paths:
        - /
        pathType: Prefix
        tls:
        - secretName: alertmanager-tls
          hosts:
          - "alertmanager.${SECRET_DOMAIN}"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              volumeName: alertmanager
              accessModes:
              - ReadWriteOnce
              storageClassName: openebs-zfspv
              resources:
                requests:
                  storage: 250Mi
    prometheus:
      enabled: true
      logFormat: json
      logLevel: error  
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure                                                      
        hosts:
        - "prometheus.${SECRET_DOMAIN}"
        paths:
        - /
        pathType: Prefix
        tls:
        - secretName: prometheus-tls
          hosts:
          - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 48h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              volumeName: prometheus
              accessModes:
              - ReadWriteOnce
              storageClassName: openebs-zfspv
              resources:
                requests:
                  storage: 50Gi
    prometheusOperator:
      enabled: true
      configReloaderCpu: 0
      admissionWebhooks:
        certManager:
          enabled: true
    coreDns:
      enabled: true
    kubeApiServer:
      enabled: true
      serviceMonitor:
        relabelings:
        - sourceLabels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name
          action: keep
          regex: default;kubernetes;https
        - targetLabel: __address__
          replacement: kubernetes.default.svc:443
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    nodeExporter:
      enabled: true
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    kubeControllerManager:
      enabled: false
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            global:
              enabled: true
