---
- name: network | hostname to inventory hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  when:
    - ansible_hostname != inventory_hostname

- name: network | update /etc/hosts to include hostname
  ansible.builtin.blockinfile:
    path: /etc/hosts
    create: true
    block: |
      127.0.0.1 localhost
      127.0.1.1 {{ inventory_hostname }}

      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts

- name: network | check for bridge-nf-call-iptables
  ansible.builtin.stat:
    path: /proc/sys/net/bridge/bridge-nf-call-iptables
  register: bridge_nf_call_iptables_result

- name: network | set kubernetes network configuration
  ansible.builtin.blockinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    mode: 0644
    create: true
    block: |
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv6.conf.all.forwarding = 1
      net.bridge.bridge-nf-call-ip6tables = 1
  when:
    - bridge_nf_call_iptables_result.stat.exists
  register: sysctl_network

- name: network | reload kubernetes network configuration
  ansible.builtin.shell: sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf
  when:
    - sysctl_network.changed
    - bridge_nf_call_iptables_result.stat.exists

- name: network | check original netplan
  ansible.builtin.stat:
    path: /etc/netplan/00-installer-config.yaml
  register: original_netplan

- name: network | remove original netplan
  ansible.builtin.shell: 'rm -f /etc/netplan/00-installer-config.yaml'

- name: network | install new netplan
  ansible.builtin.template:
    src: netplan-config.yaml.j2
    dest: /etc/netplan/config.yaml
    lstrip_blocks: true
    validate: 'netplan apply %s'
